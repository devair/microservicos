services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" # RabbitMQ Management UI
      - "5672:5672"   # RabbitMQ AMQP port
    
    networks:
      - app-network
      
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27017:27017'

    environment:
      - MONGODB_INITDB_ROOT_USERNAME=docker
      - MONGODB_INITDB_ROOT_PASSWORD=docker
    volumes:
      - mongo-data:/data/db  
    networks:
      - app-network

  payments-app:
    build: 
      context: ./ms-payments-service
      dockerfile:  Dockerfile          
    container_name: payments_app    
    ports:
      - 3334:3334
      - 9230:9230 #porta para debug
    volumes:
      - ./src:/usr/src/app/src 

    environment:                  
      - APP_PORT=3334
      - DB_DATABASE=pagamentos      
      - MONGO_URI=mongodb://mongo:27017/pagamentos
      - ORDERS_URI=http://orders-app:3333/api/v1
    
    depends_on:
      - mongo
      - orders-app 

    networks:
      - app-network

  orders-app:
    build: 
      context: ./ms-orders-service
      dockerfile: Dockerfile          
    container_name: orders_app    
    ports:
      - 3333:3333
      - 9229:9229 #porta para debug
    volumes:
      - ./src:/usr/src/app/src 

    environment:                  
      - APP_PORT=3333
      - DB_DATABASE=pedidos_db
      - DB_USER=docker
      - DB_PASS=docker
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - RABBITMQ_URL=amqp://rabbitmq

    depends_on:
      - postgres-db
      - rabbitmq

    networks:
      - app-network
  
  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: always
    ports:
      - 5432:5432
    environment: 
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=pedidos_db
    volumes:
      - pgdata:/data/postgres
      
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  pgdata:
    driver: local  